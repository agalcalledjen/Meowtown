{"version":3,"sources":["images/cat-load.png","images/pets.svg","registerServiceWorker.js","theme/index.js","apollo/index.js","apollo/queries.js","components/AccountForm/styles.js","components/AccountForm/AccountForm.js","components/AccountForm/helpers/validation.js","components/AccountForm/index.js","pages/Home/Home.js","pages/Home/styles.js","pages/Home/index.js","pages/Home/HomeContainer.js","components/ItemCard/styles.js","context/ViewerProvider.js","components/ItemCard/ItemCard.js","components/ItemsGrid/styles.js","components/ItemsGrid/index.js","components/ItemsGrid/ItemsGrid.js","pages/Items/styles.js","pages/Items/Items.js","components/FullScreenLoader/styles.js","components/FullScreenLoader/index.js","components/FullScreenLoader/FullScreenLoader.js","pages/Items/index.js","pages/Items/ItemsContainer.js","pages/Profile/styles.js","pages/Profile/Profile.js","pages/Profile/index.js","pages/Profile/ProfileContainer.js","components/ShareItemForm/styles.js","redux/modules/ShareItem.js","components/ShareItemForm/ShareItemForm.js","components/ShareItemForm/helpers/validation.js","components/ShareItemForm/index.js","components/ShareItemPreview/index.js","components/ShareItemPreview/ShareItemPreview.js","pages/Share/Share.js","pages/Share/styles.js","pages/Share/index.js","pages/Share/ShareContainer.js","components/Menu/styles.js","components/Menu/Menu.js","routes/Layout.js","redux/index.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","createMuiTheme","typography","useNextVariants","palette","primary","main","secondary","overrides","MuiButton","root","fontWeight","paddingRight","paddingLeft","httpWithUploadsLink","createUploadLink","includeExtensions","uri","process","credentials","client","ApolloClient","link","ApolloLink","from","onError","_ref","graphQLErrors","networkError","map","_ref2","message","locations","path","concat","cache","InMemoryCache","ItemFields","gql","_templateObject","ALL_ITEMS_QUERY","_templateObject2","_templateObject3","ALL_USER_ITEMS_QUERY","_templateObject4","ALL_TAGS_QUERY","_templateObject5","ADD_ITEM_MUTATION","_templateObject6","VIEWER_QUERY","_templateObject7","LOGOUT_MUTATION","_templateObject8","SIGNUP_MUTATION","_templateObject9","LOGIN_MUTATION","_templateObject10","styles","theme","formControl","marginBottom","spacing","unit","width","formButton","marginTop","formToggle","background","border","textDecoration","&:hover","cursor","accountForm","Object","defineProperty","breakpoints","up","fontFamily","color","fontSize","AccountForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","values","_this2","classes","react_default","a","createElement","react","react_final_form_es","onSubmit","validate","errors","email","password","fullname","render","handleSubmit","submitting","pristine","invalid","form","className","name","input","meta","FormControl_default","fullWidth","InputLabel_default","htmlFor","Input_default","assign","id","type","inputProps","autoComplete","value","touched","_ref3","_ref4","_ref5","Grid_default","container","direction","justify","alignItems","Button_default","variant","size","onClick","loginMutation","variables","user","signupMutation","disabled","Typography_default","setState","reset","errorMessage","Component","refetchQueries","query","compose","graphql","options","withStyles","Home","item","xs","sm","md","gutterBottom","subheading","headline","components_AccountForm","flexGrow","height","padding","text","display3","display4","HomeContainer","pages_Home_Home","card","paddingBottom","media","paddingTop","title","capitalize","textTransform","avatar","marginRight","gravatar","borderRadius","owner","ViewerContext","React","createContext","ViewerProvider","children","react_apollo_browser_umd","data","loading","viewer","Provider","ItemCard","history","dateNow","Date","now","daysCounted","Math","round","created","hours","Consumer","Card_default","CardMedia_default","image","imageurl","component","Link","to","itemowner","CardContent_default","Avatar_default","pathname","dist_default","default","tags","tag","join","description","CardActions_default","button","defaultProps","borrower","bio","withRouter","itemsRoot","control","ItemsGrid","items","lg","key","components_ItemCard_ItemCard","components_ItemsGrid","wrapper","margin","position","display","flexDirection","progress","top","zIndex","catQuote","FullScreenLoader","src","catIcon","alt","CircularProgress_default","index_es","ItemsContainer","components_FullScreenLoader","inverted","pages_Items_Items","paper","userName","share","marginLeft","sharedItems","length","Paper_default","ProfileContainer","params","userid","pages_Profile_Profile","flexWrap","shareButton","field","initialState","ShareItemForm","handleSelectTags","event","selectedTags","target","handleSelectFile","fileSelected","fileInput","current","files","createRef","done","updateItem","getBase64Url","objectSpread","applyTags","filter","t","indexOf","_this3","Promise","resolve","reader","FileReader","onload","e","btoa","result","readAsBinaryString","selected","_this4","_this$props","resetItem","resetItemImg","mutation","addItemMutation","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","subscription","dispatchUpdate","click","ref","accept","onChange","hidden","cssLabel","label","multiline","rows","placeholder","_ref6","Select_default","multiple","renderValue","generateTagsText","MenuItem_default","Checkbox_default","checked","ListItemText_default","connect","dispatch","payload","ShareItemPreview","shareItemPreview","Share","Hidden_default","only","components_ShareItemPreview","components_ShareItemForm","ShareContainer","pages_Share_Share","grow","menuButton","boxShadow","MenuAppBar","auth","anchorEl","shareBtn","handleChange","handleMenu","currentTarget","handleClose","shareHandleChange","_this$state","open","AppBar_default","Toolbar_default","IconButton_default","aria-label","href","logo","Slide_default","in","mountOnEnter","unmountOnExit","AddCircle_default","userButton","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","menuItem","ListItemIcon_default","icon","Fingerprint_default","inset","logoutMutation","PowerSettingsNew_default","Layout","Menu_Menu","Switch","Route","exact","Items","Profile","Redirect","store","createStore","combineReducers","action","composeWithDevTools","applyMiddleware","ReactDOM","es","core_styles","CssBaseline_default","ViewerProvider_ViewerProvider","BrowserRouter","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8NCUlCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KC7ElDC,+BAAe,CAC5BC,WAAY,CACVC,iBAAiB,GAEnBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,YAGVE,UAAW,CACTC,UAAW,CACTC,KAAM,CACJC,WAAY,IACZC,aAAc,SACdC,YAAa,0DCbfC,EAAsBC,YAAiB,CAC3CC,mBAAmB,EACnBC,KAAKC,EACLC,YAAqD,gBAoBxCC,EAjBA,IAAIC,IAAa,CAC9BC,KAAMC,IAAWC,KAAK,CACpBC,YAAQ,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,cAAeC,EAAmBF,EAAnBE,aACpBD,GACFA,EAAcE,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,UAAWC,EAAvBH,EAAuBG,KAAvB,OAChBpC,QAAQC,IAAR,6BAAAoC,OAC+BH,EAD/B,gBAAAG,OACqDF,EADrD,YAAAE,OACyED,MAIzEL,GAAc/B,QAAQC,IAAR,oBAAAoC,OAAgCN,MAEpDd,IAEFqB,MAAO,IAAIC,umECpBb,IAAMC,GAAaC,IAAHC,MAmCHC,IATaF,IAAHG,KAMnBJ,IAG2BC,IAAHI,KAMxBL,KAGSM,GAAuBL,IAAHM,IAc7BP,IAGSQ,GAAiBP,IAAHQ,KASdC,GAAoBT,IAAHU,KAmBjBC,GAAeX,IAAHY,KAWZC,GAAkBb,IAAHc,KAMfC,GAAkBf,IAAHgB,KAMfC,GAAiBjB,IAAHkB,kBCxFZC,GA9BA,SAAAC,GAAK,MAAK,CACvBC,YAAa,CACXC,aAAmC,EAArBF,EAAMG,QAAQC,KAC5BC,MAAO,QAETC,WAAY,CACVC,UAAgC,EAArBP,EAAMG,QAAQC,MAE3BI,WAAY,CACVC,WAAY,OACZC,OAAQ,OACRC,eAAgB,YAChBC,UAAW,CACTC,OAAQ,YAGZC,YAAYC,OAAAC,GAAA,EAAAD,CAAA,CACVV,MAAO,QACNL,EAAMiB,YAAYC,GAAG,MAAQ,CAC5Bb,MAAO,UAGX/D,MAAO,CACL6E,WAAY,qBACZC,MAAO,MACPC,SAAU,OACVd,UAAWP,EAAMG,QAAQC,KAAO,KCR9BkB,eACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAJ,IACjBE,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAO,GAAAO,KAAAH,KAAMH,KACDtF,MAAQ,CACXuE,YAAY,GAHGgB,wEAOVM,qCAEA,IAAAC,EAAAL,KACCM,EAAYN,KAAKH,MAAjBS,QAER,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,SAAUZ,KAAKY,SACfC,SAAU,SAAAT,GACR,OCpCG,SAAkBA,GAC/B,IAAMU,EAAS,GAUf,OATKV,EAAOW,QACVD,EAAOC,MAAQ,YAEZX,EAAOY,WACVF,EAAOE,SAAW,YAEhBZ,EAAOa,WAAab,EAAOa,WAC7BH,EAAOE,SAAW,YAEbF,EDyBUD,CAAST,IAElBc,OAAQ,SAAA5E,GAAA,IACN6E,EADM7E,EACN6E,aACAC,EAFM9E,EAEN8E,WACAC,EAHM/E,EAGN+E,SACAC,EAJMhF,EAINgF,QACAlB,EALM9D,EAKN8D,OACAmB,EANMjF,EAMNiF,KANM,OAQNhB,EAAAC,EAAAC,cAAA,QAAMG,SAAUO,EAAcK,UAAWlB,EAAQlB,cAC7CiB,EAAK9F,MAAMuE,YACXyB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEc,KAAK,WACLP,OAAQ,SAAAxE,GAAA,IAAGgF,EAAHhF,EAAGgF,MAAOC,EAAVjF,EAAUiF,KAAV,OACNpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAaqB,WAAS,EAACL,UAAWlB,EAAQ/B,aACxCgC,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,QAAQ,YAApB,YACAxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAADnB,OAAA4C,OAAA,CACEC,GAAG,WACHC,KAAK,OACLC,WAAY,CACVC,aAAc,OAEhBC,MAAO,IACHZ,IAELC,EAAKY,SACJZ,EAAKL,SACHf,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQ1F,OAAQ+G,EAAK/G,WAOjD2F,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEc,KAAK,QACLP,OAAQ,SAAAsB,GAAA,IAAGd,EAAHc,EAAGd,MAAOC,EAAVa,EAAUb,KAAV,OACNpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAaqB,WAAS,EAACL,UAAWlB,EAAQ/B,aACxCgC,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,QAAQ,SAApB,SACAxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAADnB,OAAA4C,OAAA,CACEC,GAAG,QACHC,KAAK,OACLC,WAAY,CACVC,aAAc,OAEhBC,MAAO,IACHZ,IAELC,EAAKY,SACJZ,EAAKL,SACHf,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQ1F,OAAQ+G,EAAK/G,WAM/C2F,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEc,KAAK,WACLP,OAAQ,SAAAuB,GAAA,IAAGf,EAAHe,EAAGf,MAAOC,EAAVc,EAAUd,KAAV,OACNpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAaqB,WAAS,EAACL,UAAWlB,EAAQ/B,aACxCgC,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,QAAQ,YAApB,YACAxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAADnB,OAAA4C,OAAA,CACEC,GAAG,WACHC,KAAK,WACLC,WAAY,CACVC,aAAc,OAEhBC,MAAO,IACHZ,IAELC,EAAKY,SACJZ,EAAKL,SACHf,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQ1F,OAAQ+G,EAAK/G,WAM/C2F,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEc,KAAK,SACLP,OAAQ,SAAAwB,KAAGhB,MAAH,IAAUC,EAAVe,EAAUf,KAAV,OACNpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAagB,UAAWlB,EAAQ/B,aAC9BgC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACEoC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,UAEXxC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CACE2B,KAAK,SACLX,UAAWlB,EAAQ1B,WACnBqE,QAAQ,YACRC,KAAK,QACLxD,MAAM,YACNyD,QAAS,WACH9C,EAAK9F,MAAMuE,WACbuB,EAAKR,MAAMuD,cAAc,CACvBC,UAAW,CACTC,KAAMlD,KAIVC,EAAKR,MAAM0D,eAAe,CACxBF,UAAW,CACTC,KAAMlD,MAKdoD,SAAUpC,GAAcC,GAAYC,GAEnCjB,EAAK9F,MAAMuE,WAAa,QAAU,kBAErCyB,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACED,EAAAC,EAAAC,cAAA,UACEe,UAAWlB,EAAQxB,WACnBqD,KAAK,SACLgB,QAAS,WACP9C,EAAKqD,SAAS,CACZ5E,YAAauB,EAAK9F,MAAMuE,aAE1ByC,EAAKoC,UAGNtD,EAAK9F,MAAMuE,WACR,qBACA,gCAIT6C,EAAKY,SACJZ,EAAKL,SACHf,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQ1F,OAAQ+G,EAAK/G,WAK/C2F,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYgB,UAAWlB,EAAQsD,2BA5JnBC,aAqKpBC,GAAiB,CACrB,CACEC,MAAOlG,KEvLI+B,GF2LAoE,kBACbC,kBAAQhG,GAAiB,CACvBiG,QAAS,CACPJ,mBAEFrC,KAAM,mBAERwC,kBAAQ9F,GAAgB,CACtB+F,QAAS,CACPJ,mBAEFrC,KAAM,kBAER0C,qBAAW9F,IAbE2F,CAcbpE,IGvKawE,GA/BF,SAAA9H,GAAiB,IAAdgE,EAAchE,EAAdgE,QACd,OACEC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACEoC,WAAS,EACTpB,UAAWlB,EAAQhF,KACnBuH,UAAU,MACVE,WAAW,SACXD,QAAQ,UAERvC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7BjE,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEyC,QAAQ,SACRwB,cAAY,EACZjD,UAAWlB,EAAQoE,YAHrB,YAOAnE,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYyC,QAAQ,WAAWzB,UAAWlB,EAAQqE,UAAlD,yBAIFpE,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7BjE,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYiE,cAAY,EAACxB,QAAQ,YAAjC,iBAGA1C,EAAAC,EAAAC,cAACmE,GAAD,SCNOvG,GAxBA,SAAAC,GAAK,MAAK,CACvBhD,KAAK+D,OAAAC,GAAA,EAAAD,CAAA,CACHwF,SAAU,EACVC,OAAQ,OACR/F,WAAYT,EAAMtD,QAAQC,QAAQC,KAClC6J,QAA8B,EAArBzG,EAAMG,QAAQC,MACtBJ,EAAMiB,YAAYC,GAAG,MAAQ,CAC5BuF,QAA8B,GAArBzG,EAAMG,QAAQC,OAG3BiG,SAAStF,OAAAC,GAAA,EAAAD,CAAA,CACP9D,WAAY,IACZmE,MAAOpB,EAAMtD,QAAQgK,KAAK/J,QAC1B0E,SAAUrB,EAAMxD,WAAWmK,SAAStF,UACnCrB,EAAMiB,YAAYC,GAAG,MAAQ,CAC5BG,SAAUrB,EAAMxD,WAAWoK,SAASvF,WAGxC+E,WAAY,CACVnJ,WAAY,IACZmE,MAAO,WClBIyF,GCOAhB,qBAAW9F,GAAX8F,CAJO,SAAA7H,GAAiB,IAAdgE,EAAchE,EAAdgE,QACvB,OAAOC,EAAAC,EAAAC,cAAC2E,GAAD,CAAM9E,QAASA,0FCuBTjC,GA7BA,SAAAC,GAAK,MAAK,CACvB+G,KAAM,CACJC,cAAoC,IAArBhH,EAAMG,QAAQC,MAE/B6G,MAAO,CACLT,OAAQ,EACRU,WAAY,UAEdC,MAAO,CACL/F,MAAOpB,EAAMtD,QAAQgK,KAAK/J,SAE5ByK,WAAY,CACVC,cAAe,cAEjBC,OAAQ,CACNC,YAAkC,EAArBvH,EAAMG,QAAQC,KAC3BC,MAAO,GACPmG,OAAQ,IAEVgB,SAAU,CACRC,aAAc,GACdpH,MAAO,GACPmG,OAAQ,IAEVkB,MAAO,CACLxH,aAAmC,EAArBF,EAAMG,QAAQC,oECpBnBuH,GAAgBC,IAAMC,gBAEtBC,GAAiB,SAAA9J,GAAkB,IAAf+J,EAAe/J,EAAf+J,SAC/B,OACE9F,EAAAC,EAAAC,cAAC6F,EAAA,MAAD,CAAOvC,MAAOlG,IACX,SAAAnB,GAAuB,IAApB6J,EAAoB7J,EAApB6J,KAAMC,EAAc9J,EAAd8J,QACFC,EAASF,GAAQA,EAAKE,OAASF,EAAKE,OAAS,KACnD,OACElG,EAAAC,EAAAC,cAACwF,GAAcS,SAAf,CAAwBpE,MAAO,CAAEmE,SAAQD,YACtCH,MCEPM,GAAW,SAAArK,GAAgC,IAA7BgE,EAA6BhE,EAA7BgE,QAAS+D,EAAoB/H,EAApB+H,KAAMuC,EAActK,EAAdsK,QAC3BC,EAAUC,KAAKC,MAKfC,EAAcC,KAAKC,OAAOL,EAAUxC,EAAK8C,SAFlCC,OAIb,OACE7G,EAAAC,EAAAC,cAACwF,GAAcoB,SAAf,KACG,SAAA3K,GAAA,IAAG+J,EAAH/J,EAAG+J,OAAH,OACClG,EAAAC,EAAAC,cAAC6G,GAAA9G,EAAD,CAAMgB,UAAWlB,EAAQ+E,MACvB9E,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,CACEgB,UAAWlB,EAAQiF,MACnBiC,MAAOnD,EAAKoD,SACZhC,MAAOpB,EAAKoB,MACZiC,UAAWC,KACXC,GAAE,YAAA9K,OAAcuH,EAAKwD,UAAU3F,MAEjC3B,EAAAC,EAAAC,cAACqH,GAAAtH,EAAD,KACED,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAMoC,WAAS,EAACpB,UAAWlB,EAAQ0F,MAAOjD,WAAW,UACnDxC,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAAQgB,UAAWlB,EAAQsF,QACM,WAA9BgB,EAAQnN,SAASuO,SAChBzH,EAAAC,EAAAC,cAACwH,GAAAzH,EAAD,CACEO,MAAO0F,EAAO1F,MACdmH,QAAQ,QACR1G,UAAWlB,EAAQwF,WAGrBvF,EAAAC,EAAAC,cAACwH,GAAAzH,EAAD,CACEO,MAAOsD,EAAKwD,UAAU9G,MACtBmH,QAAQ,QACR1G,UAAWlB,EAAQwF,YAIzBvF,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAM6D,MAAI,GACR9D,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYyC,QAAQ,QAAQwB,cAAY,GACP,WAA9BmC,EAAQnN,SAASuO,SACdvB,EAAOxF,SACPoD,EAAKwD,UAAU5G,UAErBV,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYyC,QAAQ,UAAUwB,cAAY,GACvCuC,EAAc,EACXA,EAAc,YACdA,EAAc,cAIxBzG,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEkH,UAAU,KACVzE,QAAQ,WACRwB,cAAY,EACZjD,UAAWlB,EAAQmF,OAElBpB,EAAKoB,OAERlF,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEyC,QAAQ,UACRwB,cAAY,EACZjD,UAAWlB,EAAQoF,YAElBrB,EAAK8D,KAAK1L,IAAI,SAAA2L,GAAG,OAAIA,EAAI3C,QAAO4C,KAAK,OAExC9H,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYyC,QAAQ,QAAQwB,cAAY,GACrCJ,EAAKiE,eAIZ/H,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,KACED,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAQyC,QAAQ,WAAWzB,UAAWlB,EAAQkI,QAA9C,eAcZ7B,GAAS8B,aAAe,CACtBpE,KAAM,CACJqE,SAAU,OACVJ,YAAa,2CACbpG,GAAI,IACJuF,SACE,mHACFI,UAAW,CACTc,IAAK,4BACL5H,MAAO,mBACPE,SAAU,OACViB,GAAI,KAENiG,KAAM,CACJ,CACEjG,GAAI,IACJuD,MAAO,kCAGXA,MAAO,YAIImD,oBAAWzE,qBAAW9F,GAAX8F,CAAmBwC,KCjH9BtI,GAXA,SAAAC,GAAK,MAAK,CACvBuK,UAAW,CACThE,SAAU,EACVE,QAA8B,GAArBzG,EAAMG,QAAQC,KACvB8G,WAAY,GAEdsD,QAAS,CACP/D,QAA8B,EAArBzG,EAAMG,QAAQC,QCLZqK,GCiCA5E,qBAAW9F,GAAX8F,CA5BG,SAAA7H,GAAwB,IAArBgE,EAAqBhE,EAArBgE,QAAS0I,EAAY1M,EAAZ0M,MAC5B,OACEzI,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACEoC,WAAS,EACTpB,UAAWlB,EAAQuI,UACnBpK,QAAS,GACTqE,QAAQ,cAEPkG,EAAMvM,IAAI,SAAA4H,GAAI,OACb9D,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACE6D,MAAI,EACJC,GAAI,GACJE,GAAI,EACJyE,GAAI,EACJzH,UAAWlB,EAAQwI,QACnBI,IAAK7E,EAAKnC,IAEV3B,EAAAC,EAAAC,cAAC0I,GAAD,CAAU9E,KAAMA,UClBXhG,GANA,SAAAC,GAAK,MAAK,CACvBsE,UAAW,CACT/D,UAAgC,GAArBP,EAAMG,QAAQC,QCWdyF,wBAAW9F,GAAX8F,CARD,SAAA7H,GAAwB,IAArBgE,EAAqBhE,EAArBgE,QAAS0I,EAAY1M,EAAZ0M,MACxB,OACEzI,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQsC,WACtBrC,EAAAC,EAAAC,cAAC2I,GAAD,CAAWJ,MAAOA,0DCaT3K,GArBA,SAAAC,GAAK,MAAK,CACvBsE,UAAW,CACTkC,OAAQ,SAEVuE,QAAS,CACPC,OAAQhL,EAAMG,QAAQC,KACtB6K,SAAU,WACVC,QAAS,OACTC,cAAe,SACf1G,WAAY,UAEd2G,SAAU,CACRH,SAAU,WACVI,KAAM,GACNC,OAAQ,GAEVC,SAAU,CACR9E,QAA8B,EAArBzG,EAAMG,QAAQC,QCfZoL,GCmCA3F,qBAAW9F,GAAX8F,CA5BU,SAAA7H,GAAiB,IAAdgE,EAAchE,EAAdgE,QAC1B,OACEC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACEoC,WAAS,EACTpB,UAAWlB,EAAQsC,UACnBE,QAAQ,SACRC,WAAW,UAEXxC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAM6D,MAAI,EAAC7C,UAAWlB,EAAQ+I,SAC5B9I,EAAAC,EAAAC,cAAA,OAAKsJ,IAAKC,KAASC,IAAI,WAAWtL,MAAM,OACxC4B,EAAAC,EAAAC,cAACyJ,GAAA1J,EAAD,CAAkB0C,KAAM,IAAK1B,UAAWlB,EAAQoJ,WAChDnJ,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CACEzC,UAAU,KACVzE,QAAQ,WACRzB,UAAWlB,EAAQuJ,SACnBnK,MAAM,WAJR,yFClBO0K,GCqBAjG,qBAAW9F,GAAX8F,CAfQ,SAAA7H,GAAiB,IAAdgE,EAAchE,EAAdgE,QACxB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6F,EAAA,MAAD,CAAOvC,MAAO3G,IACX,SAAAV,GAA8B,IAA3B8J,EAA2B9J,EAA3B8J,QAAS5L,EAAkB8B,EAAlB9B,MAAO2L,EAAW7J,EAAX6J,KAClB,OAAIC,EAAgBjG,EAAAC,EAAAC,cAAC4J,GAAD,CAAkBC,UAAQ,IAC1C1P,EAAc2F,EAAAC,EAAAC,cAAA,mBAAA3D,OAAclC,EAAM+B,UAE/B4D,EAAAC,EAAAC,cAAC8J,GAAD,CAAOjK,QAASA,EAAS0I,MAAOzC,EAAKyC,iCCevC3K,GA/BA,SAAAC,GAAK,MAAK,CACvBsE,UAAW,CACT/D,UAAgC,GAArBP,EAAMG,QAAQC,MAE3BpD,KAAM,CACJuJ,SAAU,EACVE,QAA8B,GAArBzG,EAAMG,QAAQC,KACvB8G,WAAY,EACZF,cAAoC,EAArBhH,EAAMG,QAAQC,MAE/B8L,MAAO,CACLzF,QAA8B,EAArBzG,EAAMG,QAAQC,MAEzB+L,SAAU,CACRjM,aAAmC,EAArBF,EAAMG,QAAQC,MAE9BkH,OAAQ,CACNC,YAAkC,EAArBvH,EAAMG,QAAQC,KAC3BC,MAAO,GACPmG,OAAQ,IAEVgB,SAAU,CACRC,aAAc,GACdpH,MAAO,GACPmG,OAAQ,IAEV4F,MAAO,CACLC,WAAiC,GAArBrM,EAAMG,QAAQC,QCwCfyF,wBAAW9F,GAAX8F,CAxDC,SAAA7H,GAAuB,IAApBgE,EAAoBhE,EAApBgE,QAASgD,EAAWhH,EAAXgH,KACpBsH,EAActH,EAAK0F,MAAM6B,OAE/B,OACEtK,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQsC,WACtBrC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAMoC,WAAS,EAACnE,QAAS,GAAI+C,UAAWlB,EAAQhF,MAC9CiF,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAM6D,MAAI,EAACC,GAAI,IACb/D,EAAAC,EAAAC,cAACqK,GAAAtK,EAAD,CAAOgB,UAAWlB,EAAQkK,OACxBjK,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAMoC,WAAS,EAACpB,UAAWlB,EAAQmK,SAAU1H,WAAW,UACtDxC,EAAAC,EAAAC,cAACsH,GAAAvH,EAAD,CAAQgB,UAAWlB,EAAQsF,QACzBrF,EAAAC,EAAAC,cAACwH,GAAAzH,EAAD,CACEO,MAAOuC,EAAKvC,MACZmH,QAAQ,QACR1G,UAAWlB,EAAQwF,YAGvBvF,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYkH,UAAU,KAAKzE,QAAQ,YAChCK,EAAKrC,WAGVV,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYkH,UAAU,KAAKzE,QAAQ,WAAWwB,cAAY,GACvDmG,EAAc,GAAqB,IAAhBA,EAChBA,EAAc,UACdA,EAAc,SAHpB,2BAMArK,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYyC,QAAQ,QAAQwB,cAAY,GACrCnB,EAAKqF,QAKbiC,EACCrK,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAM6D,MAAI,EAACC,GAAI,IACb/D,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEkH,UAAU,KACVzE,QAAQ,WACRwB,cAAY,EACZjD,UAAWlB,EAAQoK,MACnBhL,MAAM,WALR,gBASAa,EAAAC,EAAAC,cAAC2I,GAAD,CAAWJ,MAAO1F,EAAK0F,SAGzB,MCvDO+B,GC0BA5G,qBAAW9F,GAAX8F,CAnBU,SAAA7H,GAAwB,IAArBgE,EAAqBhE,EAArBgE,QACpB4B,EADyC5F,EAAZ3C,MAClBqR,OAAOC,OAExB,OACE1K,EAAAC,EAAAC,cAACwF,GAAcoB,SAAf,KACG,SAAA3K,GAAA,IAAG+J,EAAH/J,EAAG+J,OAAH,OACClG,EAAAC,EAAAC,cAAC6F,EAAA,MAAD,CAAOvC,MAAOxG,GAAsB8F,UAAW,CAAEnB,GAAIA,GAAMuE,EAAOvE,KAC/D,SAAAM,GAA8B,IAA3BgE,EAA2BhE,EAA3BgE,QAAS5L,EAAkB4H,EAAlB5H,MAAO2L,EAAW/D,EAAX+D,KAClB,OAAIC,EAAgBjG,EAAAC,EAAAC,cAAC4J,GAAD,CAAkBC,UAAQ,IAC1C1P,EAAc2F,EAAAC,EAAAC,cAAA,mBAAA3D,OAAclC,EAAM+B,UAE/B4D,EAAAC,EAAAC,cAACyK,GAAD,CAAS5K,QAASA,EAASgD,KAAMiD,EAAKjD,0ECkB1CjF,GAtCA,SAAAC,GAAK,MAAK,CACvB1D,MAAO,CACL6E,WAAY,qBACZC,MAAO,MACPC,SAAU,OACVd,UAAW,UAEb8F,SAAU,CACRpJ,WAAY,IACZmE,MAAOpB,EAAMtD,QAAQgK,KAAK/J,SAE5ByJ,WAAY,CACVnJ,WAAY,IACZmE,MAAO,SAET8I,OAAQ,CACN3J,UAAgC,GAArBP,EAAMG,QAAQC,KACzBC,MAAO,QAETiE,UAAW,CACT4G,QAAS,OACT2B,SAAU,QAEZhD,KAAM,CACJxC,cAAe,cAEjByF,YAAa,CACXvM,UAAgC,EAArBP,EAAMG,QAAQC,MAE3B2M,MAAO,CACL1M,MAAO,OACPE,UAAgC,EAArBP,EAAMG,QAAQC,MAE3BgH,WAAY,CACVC,cAAe,iGCdb2F,GAAe,CACnB7F,MAAO,iBACP6C,YAAa,qBACbH,KAAM,GACNV,SAAU,iEACVI,UAAW,GACXV,QAAS,IAAIL,MCFTyE,eACJ,SAAAA,EAAY1L,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAuL,IACjBzL,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAkM,GAAApL,KAAAH,KAAMH,KAgDR2L,iBAAmB,SAAAC,GACjB3L,EAAK4D,SAAS,CAAEgI,aAAcD,EAAME,OAAOrJ,SAlD1BxC,EA4DnB8L,iBAAmB,WACjB9L,EAAK4D,SAAS,CAAEmI,aAAc/L,EAAKgM,UAAUC,QAAQC,MAAM,MA3D3DlM,EAAKgM,UAAY5F,IAAM+F,YAEvBnM,EAAKvF,MAAQ,CACXsR,cAAc,EACdK,MAAM,EACNR,aAAc,IAPC5L,8EAWJM,EAAQ+H,EAAMgE,IACtB/L,EAAOqH,UAAYzH,KAAKzF,MAAMsR,cACjC7L,KAAKoM,eAAenS,KAAK,SAAAwN,GACvB0E,EAAW,CACT1E,eAIN0E,EAAW9M,OAAAgN,GAAA,EAAAhN,CAAA,GACNe,EADK,CAER+H,KAAMnI,KAAKsM,UAAUnE,wCAIfA,GAAM,IAAA9H,EAAAL,KACd,OACEmI,GACAA,EACGoE,OAAO,SAAAC,GAAC,OAAInM,EAAK9F,MAAMmR,aAAae,QAAQD,EAAEtK,KAAO,IACrDzF,IAAI,SAAA+P,GAAC,MAAK,CAAE/G,MAAO+G,EAAE/G,MAAOvD,GAAIsK,EAAEtK,6CAK1B,IAAAwK,EAAA1M,KACb,OAAO,IAAI2M,QAAQ,SAAAC,GACjB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAAC,GACdJ,EAAO,QAAA9P,OACG4P,EAAKnS,MAAMsR,aAAa1J,KAD3B,aAAArF,OAC2CmQ,KAC9CD,EAAErB,OAAOuB,WAIfL,EAAOM,mBAAmBT,EAAKnS,MAAMsR,yDAQxB1D,EAAMiF,GACrB,OAAOjF,EACJ1L,IAAI,SAAA+P,GAAC,OAAKY,EAASX,QAAQD,EAAEtK,KAAO,GAAIsK,EAAE/G,QAC1C8G,OAAO,SAAAS,GAAC,OAAIA,IACZ3E,KAAK,uCAOD,IAAAgF,EAAArN,KAAAsN,EACwDtN,KAAKH,MAA5DS,EADDgN,EACChN,QAAS6H,EADVmF,EACUnF,KAAMgE,EADhBmB,EACgBnB,WAAYoB,EAD5BD,EAC4BC,UAAWC,EADvCF,EACuCE,aAE9C,OACEjN,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CAAYlH,QAAQ,WAAWzB,UAAWlB,EAAQqE,UAAlD,kBAGApE,EAAAC,EAAAC,cAAC0J,GAAA,EAAD,CAAYlH,QAAQ,WAAWzB,UAAWlB,EAAQqE,UAAlD,SAGApE,EAAAC,EAAAC,cAAC6F,EAAA,SAAD,CAAUmH,SAAU9P,IACjB,SAAA+P,GACC,OACEnN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,SAAQ,eAAAtE,EAAA+C,OAAAsO,GAAA,EAAAtO,CAAAuO,GAAApN,EAAAqN,KAAE,SAAAC,EAAM1N,GAAN,OAAAwN,GAAApN,EAAAuN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACRR,EAAgB,CACdrK,UAAW,CACTgB,KAAKhF,OAAAgN,GAAA,EAAAhN,CAAA,GACAe,EADD,CAEF+H,KAAMkF,EAAK9S,MAAMmR,aAAajP,IAAI,SAAA2L,GAAG,MAAK,CACxClG,GAAIkG,EACJ3C,MAAO,WAPP,wBAAAuI,EAAAG,SAAAL,EAAA9N,SAAF,gBAAAoO,GAAA,OAAA9R,EAAA+R,MAAArO,KAAAsO,YAAA,GAaRzN,SAAU,SAAAT,GACR,OCtHM,SAACA,EAAQsL,EAAcG,GAC7C,IAAMjR,EAAQ,GAed,OAbKiR,IACHjR,EAAM6M,SAAW,sBAEdrH,EAAOqF,QACV7K,EAAM6K,MAAQ,sBAEXrF,EAAOkI,cACV1N,EAAM0N,YAAc,8BAEjBoD,GAAgBA,EAAab,OAAS,KACzCjQ,EAAMuN,KAAO,iCAGRvN,EDsGgBiG,CACLT,EACAiN,EAAK9S,MAAMmR,aACX2B,EAAK9S,MAAMsR,eAGf3K,OAAQ,SAAAxE,GAAA,IACNyE,EADMzE,EACNyE,aACAC,EAFM1E,EAEN0E,WACAC,EAHM3E,EAGN2E,SACAC,EAJM5E,EAIN4E,QACAC,EALM7E,EAKN6E,KALM,OAONhB,EAAAC,EAAAC,cAAA,QACEe,UAAWlB,EAAQsC,UACnBhC,SAAU,SAAA6K,GAAK,OACbtK,EAAasK,GAAOxR,KAAK,WAQvB,OAPAoT,EAAKvB,UAAUC,QAAQzJ,MAAQ,GAC/B+K,EAAK3J,SAAS,CAAEmI,cAAc,IAC9B2B,IAEAjM,EAAKoC,QACL4J,IACAF,EAAK3J,SAAS,CAAEgI,aAAc,MACvB,MAIXnL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4N,aAAc,CAAEnO,QAAQ,GACxBsH,UAAW,SAAAlF,GAAgB,IAAbpC,EAAaoC,EAAbpC,OAIZ,OAHIA,GACFiN,EAAKmB,eAAepO,EAAQ+H,EAAMgE,GAE7B,MAITkB,EAAK9S,MAAMsR,aAYXtL,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CACEyC,QAAQ,WACRvD,MAAM,YACN8B,UAAWlB,EAAQkI,OACnBrF,QAAS,WACPkK,EAAKvB,UAAUC,QAAQzJ,MAAQ,GAC/B+K,EAAK3J,SAAS,CAAEmI,cAAc,IAC9B2B,MAPJ,eAXAjN,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CACEyC,QAAQ,YACRvD,MAAM,UACN8B,UAAWlB,EAAQkI,OACnBrF,QAAS,WACPkK,EAAKvB,UAAUC,QAAQ0C,UAL3B,mBAwBFlO,EAAAC,EAAAC,cAAA,SACE0B,KAAK,OACLD,GAAG,YACHwM,IAAKrB,EAAKvB,UACV6C,OAAO,UACPC,SAAU,WACRvB,EAAKzB,oBAEPiD,QAAM,IAERtO,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEc,KAAK,QACLP,OAAQ,SAAAuB,GAAA,IAAGf,EAAHe,EAAGf,MAAOC,EAAVc,EAAUd,KAAV,OACNpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAagB,UAAWlB,EAAQ+K,OAC9B9K,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACEF,QAAS,CACPhF,KAAMgF,EAAQwO,YAGlBvO,EAAAC,EAAAC,cAAC0J,GAAA,EAAD9K,OAAA4C,OAAA,CACEC,GAAG,gBACHV,UAAWlB,EAAQoB,MACnBqN,MAAM,iBACN5M,KAAK,QACDT,IAELC,EAAKY,SACJZ,EAAKL,SACHf,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQ1F,OAAQ+G,EAAK/G,WAK/C2F,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEc,KAAK,cACLP,OAAQ,SAAAwB,GAAA,IAAGhB,EAAHgB,EAAGhB,MAAOC,EAAVe,EAAUf,KAAV,OACNpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAagB,UAAWlB,EAAQ+K,OAC9B9K,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CACE0B,GAAG,yBACHV,UAAWlB,EAAQoB,MACnBsN,WAAS,EACTC,KAAK,IACLC,YAAY,cACZ9M,WAAYV,IAEbC,EAAKY,SACJZ,EAAKL,SACHf,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQ1F,OAAQ+G,EAAK/G,WAM/C2F,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEc,KAAK,OACLP,OAAQ,SAAAiO,KAAGzN,MAAH,IAAUC,EAAVwN,EAAUxN,KAAV,OACNpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAagB,UAAWlB,EAAQ+K,OAC9B9K,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAYuB,QAAQ,4BAApB,iBAGAxB,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CACE6O,UAAQ,EACR/M,MAAO+K,EAAK9S,MAAMmR,aAClBkD,SAAUvB,EAAK7B,iBACf9J,MAAOnB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAO0B,GAAG,6BACjBoN,YAAa,SAAAlC,GAAQ,OACnBC,EAAKkC,iBAAiBpH,EAAMiF,IAE9B5L,UAAWlB,EAAQ6H,MAElBA,EAAK1L,IAAI,SAAA2L,GAAG,OACX7H,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,CAAU0I,IAAKd,EAAIlG,GAAII,MAAO8F,EAAIlG,IAChC3B,EAAAC,EAAAC,cAACgP,GAAAjP,EAAD,CACEkP,QACErC,EAAK9S,MAAMmR,aAAae,QAAQrE,EAAIlG,KAAO,IAG/C3B,EAAAC,EAAAC,cAACkP,GAAAnP,EAAD,CACEvF,QAASmN,EAAI3C,MACbjE,UAAWlB,EAAQoF,iBAK1B/D,EAAKY,SACJZ,EAAKL,SACHf,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQ1F,OAAQ+G,EAAK/G,WAM/C2F,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CACEyC,QAAQ,YACRvD,MAAM,UACN8B,UAAWlB,EAAQ8K,YACnB5H,SAAUpC,GAAcC,GAAYC,EACpCa,KAAK,UALP,uBAzPQ0B,aEtBb0H,GFoTAqE,YACb,KAdyB,SAAAC,GAAQ,MAAK,CACtC1D,WADsC,SAC3B9H,GACTwL,EDrSsB,SAAAxL,GAAI,MAAK,CACjClC,KANkB,cAOlB2N,QAASzL,GCmSE8H,CAAW9H,KAGtBkJ,UALsC,WAMpCsC,EDpS4B,CAC9B1N,KAViB,gBC+SjBqL,aARsC,WASpCqC,EDnS+B,CACjC1N,KAbqB,sBCmTRyN,CAGbzL,qBAAW9F,GAAX8F,CAAmBoH,KGvTNwE,GCUAH,YAJS,SAAArV,GACtB,OAAO8E,OAAAgN,GAAA,EAAAhN,CAAA,GAAK9E,IAGCqV,CARU,SAAAtT,GAA0B,IAAvB0T,EAAuB1T,EAAvB0T,iBAC1B,OAAOzP,EAAAC,EAAAC,cAAC0I,GAAD,CAAU9E,KAAM2L,MC8BVC,GAfD,SAAA3T,GAAuB,IAApBgE,EAAoBhE,EAApBgE,QAAS6H,EAAW7L,EAAX6L,KACxB,OACE5H,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAMoC,WAAS,EAACpB,UAAWlB,EAAQsC,UAAWnE,QAAS,GAAIqE,QAAQ,UACjEvC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAM6D,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGhD,UAAWlB,EAAQwI,SAC1CvI,EAAAC,EAAAC,cAACyP,GAAA1P,EAAD,CAAQ2P,KAAK,MACX5P,EAAAC,EAAAC,cAAC2P,GAAD,QAGJ7P,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAM6D,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGhD,UAAWlB,EAAQwI,SAClDvI,EAAAC,EAAAC,cAAC4P,GAAD,CAAelI,KAAMA,OClBd9J,GAXA,SAAAC,GAAK,MAAK,CACvBsE,UAAW,CACTiC,SAAU,EACVhG,UAAWP,EAAMG,QAAQC,KAAO,EAChCqG,QAA8B,EAArBzG,EAAMG,QAAQC,KACvB8G,WAAiC,GAArBlH,EAAMG,QAAQC,KAC1BK,WAAY,QACZ+F,OAAQ,WCLGwL,GCmBAnM,qBAAW9F,GAAX8F,CAbQ,SAAA7H,GAAiB,IAAdgE,EAAchE,EAAdgE,QACxB,OACEC,EAAAC,EAAAC,cAAC6F,EAAA,MAAD,CAAOvC,MAAOtG,IACX,SAAAf,GAA8B,IAA3B8J,EAA2B9J,EAA3B8J,QAAS5L,EAAkB8B,EAAlB9B,MAAO2L,EAAW7J,EAAX6J,KAClB,OAAIC,EAAgBjG,EAAAC,EAAAC,cAAC4J,GAAD,CAAkBC,UAAQ,IAC1C1P,EAAc2F,EAAAC,EAAAC,cAAA,mBAAA3D,OAAclC,EAAM+B,UAE/B4D,EAAAC,EAAAC,cAAC8P,GAAD,CAAOjQ,QAASA,EAAS6H,KAAM5B,EAAK4B,gPCOpC9J,GAtBA,SAAAC,GAAK,MAAK,CACvBgL,OAAQ,CACNA,OAAQhL,EAAMG,QAAQC,MAExBpD,KAAM,CACJuJ,SAAU,GAEZ2L,KAAM,CACJ3L,SAAU,GAEZ4L,WAAY,CACV9F,YAAa,GACb9E,YAAa,IAGfuF,YAAa,CACX9B,OAAQhL,EAAMG,QAAQC,KACtBqH,aAAc,GACd2K,UAAW,UCQTC,8MACJpW,MAAQ,CACNqW,MAAM,EACNC,SAAU,KACVC,UAAU,KAGZC,aAAe,SAAAtF,GACb3L,EAAK4D,SAAS,CAAEkN,KAAMnF,EAAME,OAAO+D,aAGrCsB,WAAa,SAAAvF,GACX3L,EAAK4D,SAAS,CAAEmN,SAAUpF,EAAMwF,mBAGlCC,YAAc,WACZpR,EAAK4D,SAAS,CAAEmN,SAAU,UAG5BM,kBAAoB,WAClBrR,EAAK4D,SAAS,SAAAnJ,GAAK,MAAK,CAAEuW,UAAWvW,EAAMuW,qFAGpC,IAAAxD,EACsBtN,KAAKH,MAA1BS,EADDgN,EACChN,QAASsG,EADV0G,EACU1G,QACTkK,EAAa9Q,KAAKzF,MAAlBuW,SAFDM,EAGoBpR,KAAKzF,MAAxBqW,EAHDQ,EAGCR,KAAMC,EAHPO,EAGOP,SACRQ,EAAO9X,QAAQsX,GAErB,OACEtQ,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQhF,MACtBiF,EAAAC,EAAAC,cAAC6Q,GAAA9Q,EAAD,CAAQ+I,SAAS,UACfhJ,EAAAC,EAAAC,cAAC8Q,GAAA/Q,EAAD,KACED,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,CACEgB,UAAWlB,EAAQmQ,WACnB/Q,MAAM,UACN+R,aAAW,OACXC,KAAK,YAELnR,EAAAC,EAAAC,cAAA,OAAKsJ,IAAK4H,KAAM1H,IAAI,OAAOtL,MAAM,QAEnC4B,EAAAC,EAAAC,cAAA,OAAKe,UAAWlB,EAAQkQ,OACO,WAA9B5J,EAAQnN,SAASuO,SAChBzH,EAAAC,EAAAC,cAACC,EAAA,SAAD,MAEAH,EAAAC,EAAAC,cAACmR,GAAApR,EAAD,CAAOqC,UAAU,OAAOgP,GAAIf,EAAUgB,cAAY,EAACC,eAAa,GAC9DxR,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAQkR,KAAK,SAASlQ,UAAWlB,EAAQ8K,aACvC7K,EAAAC,EAAAC,cAACuR,GAAAxR,EAAD,CAASgB,UAAWlB,EAAQgJ,SAD9B,oBAOHsH,GACCrQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+Q,GAAAhR,EAAD,CACEgB,UAAWlB,EAAQ2R,WACnBC,YAAWb,EAAO,mBAAgBc,EAClCC,gBAAc,OACdjP,QAASnD,KAAKgR,WACdtR,MAAM,WAENa,EAAAC,EAAAC,cAAC4R,GAAA7R,EAAD,OAEFD,EAAAC,EAAAC,cAAC6R,GAAA9R,EAAD,CACE0B,GAAG,cACH2O,SAAUA,EACV0B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAEdpB,KAAMA,EACNsB,QAAS3S,KAAKkR,aAEd3Q,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,CACEgB,UAAWlB,EAAQsS,SACnBzP,QAASnD,KAAKkR,YACdxJ,UAAWC,KACXC,GAAG,YAEHrH,EAAAC,EAAAC,cAACoS,GAAArS,EAAD,CAAcgB,UAAWlB,EAAQwS,MAC/BvS,EAAAC,EAAAC,cAACsS,GAAAvS,EAAD,OAEFD,EAAAC,EAAAC,cAACkP,GAAAnP,EAAD,CACEF,QAAS,CAAErF,QAASqF,EAAQrF,SAC5B+X,OAAK,EACL/X,QAAQ,kBAGZsF,EAAAC,EAAAC,cAAC+O,GAAAhP,EAAD,CACEgB,UAAWlB,EAAQsS,SACnBzP,QAASnD,KAAKH,MAAMoT,eACpBvL,UAAWC,KACXC,GAAG,YAEHrH,EAAAC,EAAAC,cAACoS,GAAArS,EAAD,CAAcgB,UAAWlB,EAAQwS,MAC/BvS,EAAAC,EAAAC,cAACyS,GAAA1S,EAAD,OAEFD,EAAAC,EAAAC,cAACkP,GAAAnP,EAAD,CACEF,QAAS,CAAErF,QAASqF,EAAQrF,SAC5B+X,OAAK,EACL/X,QAAQ,0BAzGL4I,aA0HnBC,GAAiB,CACrB,CACEC,MAAOlG,KAII+K,gBACb5E,kBACEC,kBAAQlG,GAAiB,CACvBmG,QAAS,CACPJ,mBAEFrC,KAAM,mBAER0C,qBAAW9F,IAPb2F,CAQE2M,KCzJWwC,GAAA,kBACb5S,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAACwF,GAAcoB,SAAf,KACG,SAAA/K,GAAyB,IAAtBmK,EAAsBnK,EAAtBmK,OACF,OADwBnK,EAAdkK,QACUjG,EAAAC,EAAAC,cAAC4J,GAAD,CAAkBC,UAAQ,IAC1C7D,EAEAlG,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAC2S,GAAD,MACA7S,EAAAC,EAAAC,cAAC4S,EAAA,EAAD,KACE9S,EAAAC,EAAAC,cAAC6S,EAAA,EAAD,CAAOC,OAAK,EAAC1W,KAAK,SAAS6K,UAAW8L,KACtCjT,EAAAC,EAAAC,cAAC6S,EAAA,EAAD,CAAOC,OAAK,EAAC1W,KAAK,WAAW6K,UAAW+L,KACxClT,EAAAC,EAAAC,cAAC6S,EAAA,EAAD,CAAOC,OAAK,EAAC1W,KAAK,mBAAmB6K,UAAW+L,KAChDlT,EAAAC,EAAAC,cAAC6S,EAAA,EAAD,CAAOC,OAAK,EAAC1W,KAAK,SAAS6K,UAAWuI,KACtC1P,EAAAC,EAAAC,cAACiT,EAAA,EAAD,CAAUtX,KAAK,IAAIwL,GAAG,aAM1BrH,EAAAC,EAAAC,cAAC4S,EAAA,EAAD,KACE9S,EAAAC,EAAAC,cAAC6S,EAAA,EAAD,CAAOC,OAAK,EAAC1W,KAAK,WAAW6K,UAAWtD,KACxC7D,EAAAC,EAAAC,cAACiT,EAAA,EAAD,CAAUtX,KAAK,IAAIwL,GAAG,qCCnBrB+L,GAPDC,uBACZC,2BAAgB,CACd7D,iBbsBW,WAAkC,IAAjCzV,EAAiC+T,UAAAzD,OAAA,QAAAsH,IAAA7D,UAAA,GAAAA,UAAA,GAAzBhD,GAAcwI,EAAWxF,UAAAzD,OAAA,EAAAyD,UAAA,QAAA6D,EAC/C,OAAQ2B,EAAO3R,MACb,IA/BgB,cAgCd,OAAO9C,OAAAgN,GAAA,EAAAhN,CAAA,GAAK9E,EAAUuZ,EAAOhE,SAE/B,IAjCe,aAkCb,OAAOzQ,OAAAgN,GAAA,EAAAhN,CAAA,GAAKiM,IAEd,IAnCmB,iBAoCjB,OAAOjM,OAAAgN,GAAA,EAAAhN,CAAA,GAAK9E,EAAZ,CAAmBkN,SAAU6D,GAAa7D,WAE5C,QACE,OAAOlN,MahCXwZ,+BAAoBC,mBAAe3F,WAAf,EANH,aC8BnB4F,IAAS/S,OAAOX,EAAAC,EAAAC,cAjBJ,WACV,OACEF,EAAAC,EAAAC,cAACyT,EAAA,EAAD,CAAeP,MAAOA,IACpBpT,EAAAC,EAAAC,cAAC0T,EAAA,iBAAD,CAAkB7V,MAAOA,GACvBiC,EAAAC,EAAAC,cAAC2T,EAAA5T,EAAD,MACAD,EAAAC,EAAAC,cAAC6F,EAAA,eAAD,CAAgBtK,OAAQA,GACtBuE,EAAAC,EAAAC,cAAC4T,GAAD,KACE9T,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,KACE/T,EAAAC,EAAAC,cAAC0S,GAAD,YASE,MAASoB,SAASC,eAAe,S5CdlC,WACb,GAA6C,kBAAmB1a,UAAW,CAGzE,GADkB,IAAI2a,IAAI3Y,GAAwBtC,OAAOC,UAC3Cib,SAAWlb,OAAOC,SAASib,OAIvC,OAGFlb,OAAOmb,iBAAiB,OAAQ,WAC9B,IAAM9a,EAAK,GAAAiD,OAAMhB,GAAN,sBAEPxC,GAiDV,SAAiCO,GAE/B+a,MAAM/a,GACHI,KAAK,SAAA4a,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBvI,QAAQ,cAG7C3S,UAAUC,cAAckb,MAAMhb,KAAK,SAAAC,GACjCA,EAAagb,aAAajb,KAAK,WAC7BT,OAAOC,SAAS0b,aAKpBvb,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEArEA0a,CAAwBvb,GAIxBC,UAAUC,cAAckb,MAAMhb,KAAK,WACjCQ,QAAQC,IACN,+GAMJd,EAAgBC,M4CbxBwb","file":"static/js/main.67933425.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat-load.60a4b27b.png\";","module.exports = __webpack_public_path__ + \"static/media/pets.31c8bae3.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: {\n      main: '#f9a825'\n    },\n    secondary: {\n      main: '#212121'\n    }\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        fontWeight: 400,\n        paddingRight: '1.5rem',\n        paddingLeft: '1.5rem'\n      }\n    }\n  }\n});\n","import { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { onError } from 'apollo-link-error';\n\nconst httpWithUploadsLink = createUploadLink({\n  includeExtensions: true,\n  uri: process.env.NODE_ENV !== 'production' && 'http://localhost:8080/graphql',\n  credentials: process.env.NODE_ENV === 'production' ? 'same-origin' : 'include'\n});\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      }\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }),\n    httpWithUploadsLink\n  ]),\n  cache: new InMemoryCache() // Pull data from client-side cache, if available\n});\n\nexport default client;\n","import gql from 'graphql-tag';\n\n/**\n * Item and user-related queries and mutations.\n */\n\nconst ItemFields = gql`\n  fragment ItemFields on Item {\n    id\n    title\n    imageurl\n    description\n    created\n    tags {\n      id\n      title\n    }\n    itemowner {\n      id\n      fullname\n      email\n      bio\n    }\n    borrower {\n      id\n      fullname\n      email\n      bio\n    }\n  }\n`;\n\nexport const ITEM_QUERY = gql`\n  query item($id: ID!) {\n    item(id: $id) {\n      ...ItemFields\n    }\n  }\n  ${ItemFields}\n`;\n\nexport const ALL_ITEMS_QUERY = gql`\n  query items($filter: ID) {\n    items(filter: $filter) {\n      ...ItemFields\n    }\n  }\n  ${ItemFields}\n`;\n\nexport const ALL_USER_ITEMS_QUERY = gql`\n  query user($id: ID!) {\n    user(id: $id) {\n      fullname\n      email\n      bio\n      items {\n        ...ItemFields\n      }\n      borrowed {\n        ...ItemFields\n      }\n    }\n  }\n  ${ItemFields}\n`;\n\nexport const ALL_TAGS_QUERY = gql`\n  query tags {\n    tags {\n      id\n      title\n    }\n  }\n`;\n\nexport const ADD_ITEM_MUTATION = gql`\n  mutation addItem(\n    $item: NewItemInput! # , $image: Upload!\n  ) {\n    addItem(item: $item) {\n      id\n      title\n      description\n      tags {\n        id\n        title\n      }\n    }\n  }\n`;\n\n/**\n * Auth-related queries and mutations.\n */\nexport const VIEWER_QUERY = gql`\n  query viewerQuery {\n    viewer {\n      id\n      email\n      fullname\n      bio\n    }\n  }\n`;\n\nexport const LOGOUT_MUTATION = gql`\n  mutation logout {\n    logout\n  }\n`;\n\nexport const SIGNUP_MUTATION = gql`\n  mutation signup($user: SignupInput!) {\n    signup(user: $user)\n  }\n`;\n\nexport const LOGIN_MUTATION = gql`\n  mutation login($user: LoginInput!) {\n    login(user: $user)\n  }\n`;\n","const styles = theme => ({\n  formControl: {\n    marginBottom: theme.spacing.unit * 2,\n    width: '100%'\n  },\n  formButton: {\n    marginTop: theme.spacing.unit * 2\n  },\n  formToggle: {\n    background: 'none',\n    border: 'none',\n    textDecoration: 'underline',\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  accountForm: {\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '400px'\n    }\n  },\n  error: {\n    fontFamily: 'Roboto, sans-serif',\n    color: 'red',\n    fontSize: '1rem',\n    marginTop: theme.spacing.unit / 2\n  }\n});\n\nexport default styles;\n","import { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport React, { Component, Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Form, Field } from 'react-final-form';\nimport {\n  LOGIN_MUTATION,\n  SIGNUP_MUTATION,\n  VIEWER_QUERY\n} from '../../apollo/queries';\nimport { graphql, compose } from 'react-apollo';\nimport validate from './helpers/validation';\nimport styles from './styles';\n\nclass AccountForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formToggle: true\n    };\n  }\n\n  onSubmit(values) {}\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Fragment>\n        <Form\n          onSubmit={this.onSubmit}\n          validate={values => {\n            return validate(values);\n          }}\n          render={({\n            handleSubmit,\n            submitting,\n            pristine,\n            invalid,\n            values,\n            form\n          }) => (\n            <form onSubmit={handleSubmit} className={classes.accountForm}>\n              {!this.state.formToggle && (\n                <Field\n                  name=\"fullname\"\n                  render={({ input, meta }) => (\n                    <FormControl fullWidth className={classes.formControl}>\n                      <InputLabel htmlFor=\"fullname\">Username</InputLabel>\n                      <Input\n                        id=\"fullname\"\n                        type=\"text\"\n                        inputProps={{\n                          autoComplete: 'off'\n                        }}\n                        value={''}\n                        {...input}\n                      />\n                      {meta.touched &&\n                        meta.invalid && (\n                          <div className={classes.error}>{meta.error}</div>\n                        )}\n                    </FormControl>\n                  )}\n                />\n              )}\n\n              <Field\n                name=\"email\"\n                render={({ input, meta }) => (\n                  <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"email\">Email</InputLabel>\n                    <Input\n                      id=\"email\"\n                      type=\"text\"\n                      inputProps={{\n                        autoComplete: 'off'\n                      }}\n                      value={''}\n                      {...input}\n                    />\n                    {meta.touched &&\n                      meta.invalid && (\n                        <div className={classes.error}>{meta.error}</div>\n                      )}\n                  </FormControl>\n                )}\n              />\n\n              <Field\n                name=\"password\"\n                render={({ input, meta }) => (\n                  <FormControl fullWidth className={classes.formControl}>\n                    <InputLabel htmlFor=\"password\">Password</InputLabel>\n                    <Input\n                      id=\"password\"\n                      type=\"password\"\n                      inputProps={{\n                        autoComplete: 'off'\n                      }}\n                      value={''}\n                      {...input}\n                    />\n                    {meta.touched &&\n                      meta.invalid && (\n                        <div className={classes.error}>{meta.error}</div>\n                      )}\n                  </FormControl>\n                )}\n              />\n\n              <Field\n                name=\"logout\"\n                render={({ input, meta }) => (\n                  <FormControl className={classes.formControl}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"space-between\"\n                      alignItems=\"center\"\n                    >\n                      <Button\n                        type=\"submit\"\n                        className={classes.formButton}\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        onClick={() => {\n                          if (this.state.formToggle) {\n                            this.props.loginMutation({\n                              variables: {\n                                user: values\n                              }\n                            });\n                          } else {\n                            this.props.signupMutation({\n                              variables: {\n                                user: values\n                              }\n                            });\n                          }\n                        }}\n                        disabled={submitting || pristine || invalid}\n                      >\n                        {this.state.formToggle ? 'Enter' : 'Create Account'}\n                      </Button>\n                      <Typography>\n                        <button\n                          className={classes.formToggle}\n                          type=\"button\"\n                          onClick={() => {\n                            this.setState({\n                              formToggle: !this.state.formToggle\n                            });\n                            form.reset();\n                          }}\n                        >\n                          {this.state.formToggle\n                            ? 'Create an account.'\n                            : 'Login to existing account.'}\n                        </button>\n                      </Typography>\n                    </Grid>\n                    {meta.touched &&\n                      meta.invalid && (\n                        <div className={classes.error}>{meta.error}</div>\n                      )}\n                  </FormControl>\n                )}\n              />\n              <Typography className={classes.errorMessage} />\n            </form>\n          )}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst refetchQueries = [\n  {\n    query: VIEWER_QUERY\n  }\n];\n\nexport default compose(\n  graphql(SIGNUP_MUTATION, {\n    options: {\n      refetchQueries\n    },\n    name: 'signupMutation'\n  }),\n  graphql(LOGIN_MUTATION, {\n    options: {\n      refetchQueries\n    },\n    name: 'loginMutation'\n  }),\n  withStyles(styles)\n)(AccountForm);\n","export default function validate(values) {\n  const errors = {};\n  if (!values.email) {\n    errors.email = 'Required';\n  }\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n  if (values.fullname && !values.fullname) {\n    errors.password = 'Required';\n  }\n  return errors;\n}\n","import AccountForm from './AccountForm';\n\nexport default AccountForm;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport AccountForm from '../../components/AccountForm';\n\nconst Home = ({ classes }) => {\n  return (\n    <Grid\n      container\n      className={classes.root}\n      direction=\"row\"\n      alignItems=\"center\"\n      justify=\"center\"\n    >\n      <Grid item xs={12} sm={12} md={6}>\n        <Typography\n          variant=\"button\"\n          gutterBottom\n          className={classes.subheading}\n        >\n          Meowtown\n        </Typography>\n        <Typography variant=\"display4\" className={classes.headline}>\n          Share. Borrow. Blep.\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6}>\n        <Typography gutterBottom variant=\"headline\">\n          Welcome home.\n        </Typography>\n        <AccountForm />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Home;\n","const styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100%',\n    background: theme.palette.primary.main,\n    padding: theme.spacing.unit * 5,\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing.unit * 20\n    }\n  },\n  headline: {\n    fontWeight: 700,\n    color: theme.palette.text.primary,\n    fontSize: theme.typography.display3.fontSize,\n    [theme.breakpoints.up('md')]: {\n      fontSize: theme.typography.display4.fontSize\n    }\n  },\n  subheading: {\n    fontWeight: 400,\n    color: 'white'\n  }\n});\n\nexport default styles;\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport Home from './Home';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\n\nconst HomeContainer = ({ classes }) => {\n  return <Home classes={classes} />;\n};\n\nexport default withStyles(styles)(HomeContainer);\n","const styles = theme => ({\n  card: {\n    paddingBottom: theme.spacing.unit * 1.5\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%'\n  },\n  title: {\n    color: theme.palette.text.primary\n  },\n  capitalize: {\n    textTransform: 'capitalize'\n  },\n  avatar: {\n    marginRight: theme.spacing.unit * 2,\n    width: 50,\n    height: 50\n  },\n  gravatar: {\n    borderRadius: 50,\n    width: 50,\n    height: 50\n  },\n  owner: {\n    marginBottom: theme.spacing.unit * 6\n  }\n});\n\nexport default styles;\n","import { Query } from 'react-apollo';\nimport React from 'react';\n\nimport { VIEWER_QUERY } from '../apollo/queries';\n\nexport const ViewerContext = React.createContext();\n\nexport const ViewerProvider = ({ children }) => {\n  return (\n    <Query query={VIEWER_QUERY}>\n      {({ data, loading }) => {\n        const viewer = data && data.viewer ? data.viewer : null;\n        return (\n          <ViewerContext.Provider value={{ viewer, loading }}>\n            {children}\n          </ViewerContext.Provider>\n        );\n      }}\n    </Query>\n  );\n};\n","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core';\nimport Gravatar from 'react-gravatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport { Link, withRouter } from 'react-router-dom';\nimport { ViewerContext } from '../../context/ViewerProvider';\n\nconst ItemCard = ({ classes, item, history }) => {\n  const dateNow = Date.now();\n  const minutes = 1000 * 60;\n  const hours = minutes * 60;\n  const days = hours * 24;\n\n  const daysCounted = Math.round((dateNow - item.created) / days);\n\n  return (\n    <ViewerContext.Consumer>\n      {({ viewer }) => (\n        <Card className={classes.card}>\n          <Fragment>\n            <CardMedia\n              className={classes.media}\n              image={item.imageurl}\n              title={item.title}\n              component={Link}\n              to={`/profile/${item.itemowner.id}`}\n            />\n            <CardContent>\n              <Grid container className={classes.owner} alignItems=\"center\">\n                <Avatar className={classes.avatar}>\n                  {history.location.pathname === '/share' ? (\n                    <Gravatar\n                      email={viewer.email}\n                      default=\"retro\"\n                      className={classes.gravatar}\n                    />\n                  ) : (\n                    <Gravatar\n                      email={item.itemowner.email}\n                      default=\"retro\"\n                      className={classes.gravatar}\n                    />\n                  )}\n                </Avatar>\n                <Grid item>\n                  <Typography variant=\"body1\" gutterBottom>\n                    {history.location.pathname === '/share'\n                      ? viewer.fullname\n                      : item.itemowner.fullname}\n                  </Typography>\n                  <Typography variant=\"caption\" gutterBottom>\n                    {daysCounted > 1\n                      ? daysCounted + ' days ago'\n                      : daysCounted + ' day ago'}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Typography\n                component=\"h2\"\n                variant=\"headline\"\n                gutterBottom\n                className={classes.title}\n              >\n                {item.title}\n              </Typography>\n              <Typography\n                variant=\"caption\"\n                gutterBottom\n                className={classes.capitalize}\n              >\n                {item.tags.map(tag => tag.title).join(', ')}\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                {item.description}\n              </Typography>\n            </CardContent>\n          </Fragment>\n          <CardActions>\n            <Button variant=\"outlined\" className={classes.button}>\n              Borrow\n            </Button>\n          </CardActions>\n        </Card>\n      )}\n    </ViewerContext.Consumer>\n  );\n};\n\nItemCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nItemCard.defaultProps = {\n  item: {\n    borrower: 'null',\n    description: 'With tangerine trees and marmalade skies',\n    id: 'X',\n    imageurl:\n      'https://www.rollingstone.com/wp-content/uploads/2018/06/rs-sgt-pepper-3-75354b0a-c2dd-4c8c-a5a1-3e01f7316e63.jpg',\n    itemowner: {\n      bio: 'In the sky with diamonds.',\n      email: 'lucy@beatles.com',\n      fullname: 'Lucy',\n      id: 'X'\n    },\n    tags: [\n      {\n        id: 'X',\n        title: 'Yourself in a boat on a river'\n      }\n    ],\n    title: 'Picture'\n  }\n};\n\nexport default withRouter(withStyles(styles)(ItemCard));\n","const styles = theme => ({\n  itemsRoot: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 12,\n    paddingTop: 0\n  },\n  control: {\n    padding: theme.spacing.unit * 2\n  }\n});\n\nexport default styles;\n","import ItemsGrid from './ItemsGrid';\n\nexport default ItemsGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ItemCard from '../ItemCard/ItemCard';\nimport styles from './styles';\n\nconst ItemsGrid = ({ classes, items }) => {\n  return (\n    <Grid\n      container\n      className={classes.itemsRoot}\n      spacing={24}\n      justify=\"flex-start\"\n    >\n      {items.map(item => (\n        <Grid\n          item\n          xs={12}\n          md={6}\n          lg={4}\n          className={classes.control}\n          key={item.id}\n        >\n          <ItemCard item={item} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nItemsGrid.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ItemsGrid);\n","const styles = theme => ({\n  container: {\n    marginTop: theme.spacing.unit * 12\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport ItemsGrid from '../../components/ItemsGrid';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\n\nconst Items = ({ classes, items }) => {\n  return (\n    <div className={classes.container}>\n      <ItemsGrid items={items} />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Items);\n","const styles = theme => ({\n  container: {\n    height: '100vh'\n  },\n  wrapper: {\n    margin: theme.spacing.unit,\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  progress: {\n    position: 'absolute',\n    top: -16,\n    zIndex: 1\n  },\n  catQuote: {\n    padding: theme.spacing.unit * 6\n  }\n});\n\nexport default styles;\n","import FullScreenLoader from './FullScreenLoader';\n\nexport default FullScreenLoader;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport catIcon from '../../images/cat-load.png';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography } from '@material-ui/core';\nimport styles from './styles';\n\nconst FullScreenLoader = ({ classes }) => {\n  return (\n    <Grid\n      container\n      className={classes.container}\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item className={classes.wrapper}>\n        <img src={catIcon} alt=\"Cat Icon\" width=\"80\" />\n        <CircularProgress size={120} className={classes.progress} />\n        <Typography\n          component=\"h2\"\n          variant=\"headline\"\n          className={classes.catQuote}\n          color=\"primary\"\n        >\n          “You can not look at a sleeping cat and feel tense.” – Jane Pauley\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nFullScreenLoader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FullScreenLoader);\n","import ItemsContainer from './ItemsContainer';\n\nexport default ItemsContainer;","import React from 'react';\nimport Items from './Items';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport FullScreenLoader from '../../components/FullScreenLoader';\nimport { Query } from 'react-apollo';\nimport { ALL_ITEMS_QUERY } from '../../apollo/queries';\n\nconst ItemsContainer = ({ classes }) => {\n  return (\n    <div>\n      <Query query={ALL_ITEMS_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <FullScreenLoader inverted />;\n          if (error) return <p>{`Error! ${error.message}`}</p>;\n\n          return <Items classes={classes} items={data.items} />;\n        }}\n      </Query>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(ItemsContainer);\n","const styles = theme => ({\n  container: {\n    marginTop: theme.spacing.unit * 12\n  },\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 12,\n    paddingTop: 0,\n    paddingBottom: theme.spacing.unit * 6\n  },\n  paper: {\n    padding: theme.spacing.unit * 6\n  },\n  userName: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  avatar: {\n    marginRight: theme.spacing.unit * 2,\n    width: 50,\n    height: 50\n  },\n  gravatar: {\n    borderRadius: 50,\n    width: 50,\n    height: 50\n  },\n  share: {\n    marginLeft: theme.spacing.unit * 12\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport styles from './styles';\nimport Gravatar from 'react-gravatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ItemsGrid from '../../components/ItemsGrid';\n\nconst Profile = ({ classes, user }) => {\n  const sharedItems = user.items.length;\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={24} className={classes.root}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container className={classes.userName} alignItems=\"center\">\n              <Avatar className={classes.avatar}>\n                <Gravatar\n                  email={user.email}\n                  default=\"retro\"\n                  className={classes.gravatar}\n                />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"display1\">\n                {user.fullname}\n              </Typography>\n            </Grid>\n            <Typography component=\"h2\" variant=\"headline\" gutterBottom>\n              {sharedItems > 1 || sharedItems === 0\n                ? sharedItems + ' Items '\n                : sharedItems + ' Item '}\n              shared 0 Items borrowed\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              {user.bio}\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n      {sharedItems ? (\n        <Grid item xs={12}>\n          <Typography\n            component=\"h2\"\n            variant=\"display1\"\n            gutterBottom\n            className={classes.share}\n            color=\"primary\"\n          >\n            Shared Items\n          </Typography>\n          <ItemsGrid items={user.items} />\n        </Grid>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Profile);\n","import ProfileContainer from './ProfileContainer';\n\nexport default ProfileContainer;\n","import React from 'react';\nimport Profile from './Profile';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport FullScreenLoader from '../../components/FullScreenLoader';\nimport { Query } from 'react-apollo';\nimport { ALL_USER_ITEMS_QUERY } from '../../apollo/queries';\nimport { ViewerContext } from '../../context/ViewerProvider';\n\nconst ProfileContainer = ({ classes, match }) => {\n  const id = match.params.userid;\n\n  return (\n    <ViewerContext.Consumer>\n      {({ viewer }) => (\n        <Query query={ALL_USER_ITEMS_QUERY} variables={{ id: id || viewer.id }}>\n          {({ loading, error, data }) => {\n            if (loading) return <FullScreenLoader inverted />;\n            if (error) return <p>{`Error! ${error.message}`}</p>;\n            // console.log(data);\n            return <Profile classes={classes} user={data.user} />;\n          }}\n        </Query>\n      )}\n    </ViewerContext.Consumer>\n  );\n};\n\nexport default withStyles(styles)(ProfileContainer);\n","const styles = theme => ({\n  error: {\n    fontFamily: 'Roboto, sans-serif',\n    color: 'red',\n    fontSize: '1rem',\n    marginTop: '0.5rem'\n  },\n  headline: {\n    fontWeight: 700,\n    color: theme.palette.text.primary\n  },\n  subheading: {\n    fontWeight: 400,\n    color: 'white'\n  },\n  button: {\n    marginTop: theme.spacing.unit * 12,\n    width: '100%'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  tags: {\n    textTransform: 'capitalize'\n  },\n  shareButton: {\n    marginTop: theme.spacing.unit * 3\n  },\n  field: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3\n  },\n  capitalize: {\n    textTransform: 'capitalize'\n  }\n});\n\nexport default styles;\n","// Actions\nconst UPDATE_ITEM = 'UPDATE_ITEM';\nconst RESET_ITEM = 'RESET_ITEM';\nconst RESET_ITEM_IMG = 'RESET_ITEM_IMG';\n\n// Action Creators\nexport const updateItem = item => ({\n  type: UPDATE_ITEM,\n  payload: item\n});\n\nexport const resetItem = () => ({\n  type: RESET_ITEM\n});\n\nexport const resetItemImg = () => ({\n  type: RESET_ITEM_IMG\n});\n\n// Initial States\nconst initialState = {\n  title: 'Name your item',\n  description: 'Describe your item',\n  tags: [],\n  imageurl: 'http://via.placeholder.com/350x250?text=Please select an image',\n  itemowner: {},\n  created: new Date()\n};\n\n// Reducers\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ITEM: {\n      return { ...state, ...action.payload };\n    }\n    case RESET_ITEM: {\n      return { ...initialState };\n    }\n    case RESET_ITEM_IMG: {\n      return { ...state, imageurl: initialState.imageurl };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { Component, Fragment } from 'react';\nimport { Typography, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Form, Field, FormSpy } from 'react-final-form';\nimport {\n  updateItem,\n  resetItem,\n  resetItemImg\n} from '../../redux/modules/ShareItem';\nimport { connect } from 'react-redux';\nimport { validate } from './helpers/validation';\nimport { Mutation } from 'react-apollo';\nimport { ADD_ITEM_MUTATION } from '../../apollo/queries';\n\nclass ShareItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n\n    this.state = {\n      fileSelected: false,\n      done: false,\n      selectedTags: []\n    };\n  }\n\n  dispatchUpdate(values, tags, updateItem) {\n    if (!values.imageurl && this.state.fileSelected) {\n      this.getBase64Url().then(imageurl => {\n        updateItem({\n          imageurl\n        });\n      });\n    }\n    updateItem({\n      ...values,\n      tags: this.applyTags(tags)\n    });\n  }\n\n  applyTags(tags) {\n    return (\n      tags &&\n      tags\n        .filter(t => this.state.selectedTags.indexOf(t.id) > -1)\n        .map(t => ({ title: t.title, id: t.id }))\n    );\n  }\n\n  // Convert the selected image into a base64 string so that we can store it our database.\n  getBase64Url() {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        resolve(\n          `data:${this.state.fileSelected.type};base64, ${btoa(\n            e.target.result\n          )}`\n        );\n      };\n      reader.readAsBinaryString(this.state.fileSelected);\n    });\n  }\n\n  handleSelectTags = event => {\n    this.setState({ selectedTags: event.target.value });\n  };\n\n  generateTagsText(tags, selected) {\n    return tags\n      .map(t => (selected.indexOf(t.id) > -1 ? t.title : false))\n      .filter(e => e)\n      .join(', ');\n  }\n\n  handleSelectFile = () => {\n    this.setState({ fileSelected: this.fileInput.current.files[0] });\n  };\n\n  render() {\n    const { classes, tags, updateItem, resetItem, resetItemImg } = this.props;\n\n    return (\n      <Fragment>\n        <Typography variant=\"display2\" className={classes.headline}>\n          Share. Borrow.\n        </Typography>\n        <Typography variant=\"display2\" className={classes.headline}>\n          Blep.\n        </Typography>\n        <Mutation mutation={ADD_ITEM_MUTATION}>\n          {addItemMutation => {\n            return (\n              <Form\n                onSubmit={async values => {\n                  addItemMutation({\n                    variables: {\n                      item: {\n                        ...values,\n                        tags: this.state.selectedTags.map(tag => ({\n                          id: tag,\n                          title: ''\n                        }))\n                      }\n                    }\n                  });\n                }}\n                validate={values => {\n                  return validate(\n                    values,\n                    this.state.selectedTags,\n                    this.state.fileSelected\n                  );\n                }}\n                render={({\n                  handleSubmit,\n                  submitting,\n                  pristine,\n                  invalid,\n                  form\n                }) => (\n                  <form\n                    className={classes.container}\n                    onSubmit={event =>\n                      handleSubmit(event).then(() => {\n                        this.fileInput.current.value = '';\n                        this.setState({ fileSelected: false });\n                        resetItemImg();\n\n                        form.reset();\n                        resetItem();\n                        this.setState({ selectedTags: [] });\n                        return false;\n                      })\n                    }\n                  >\n                    <FormSpy\n                      subscription={{ values: true }}\n                      component={({ values }) => {\n                        if (values) {\n                          this.dispatchUpdate(values, tags, updateItem);\n                        }\n                        return '';\n                      }}\n                    />\n\n                    {!this.state.fileSelected ? (\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={() => {\n                          this.fileInput.current.click();\n                        }}\n                      >\n                        Select An Image\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        onClick={() => {\n                          this.fileInput.current.value = '';\n                          this.setState({ fileSelected: false });\n                          resetItemImg();\n                        }}\n                      >\n                        Reset Image\n                      </Button>\n                    )}\n                    <input\n                      type=\"file\"\n                      id=\"fileInput\"\n                      ref={this.fileInput}\n                      accept=\"image/*\"\n                      onChange={() => {\n                        this.handleSelectFile();\n                      }}\n                      hidden\n                    />\n                    <Field\n                      name=\"title\"\n                      render={({ input, meta }) => (\n                        <FormControl className={classes.field}>\n                          <InputLabel\n                            classes={{\n                              root: classes.cssLabel\n                            }}\n                          />\n                          <TextField\n                            id=\"itemNameInput\"\n                            className={classes.input}\n                            label=\"Name your item\"\n                            type=\"text\"\n                            {...input}\n                          />\n                          {meta.touched &&\n                            meta.invalid && (\n                              <div className={classes.error}>{meta.error}</div>\n                            )}\n                        </FormControl>\n                      )}\n                    />\n                    <Field\n                      name=\"description\"\n                      render={({ input, meta }) => (\n                        <FormControl className={classes.field}>\n                          <Input\n                            id=\"item-description-input\"\n                            className={classes.input}\n                            multiline\n                            rows=\"4\"\n                            placeholder=\"Description\"\n                            inputProps={input}\n                          />\n                          {meta.touched &&\n                            meta.invalid && (\n                              <div className={classes.error}>{meta.error}</div>\n                            )}\n                        </FormControl>\n                      )}\n                    />\n\n                    <Field\n                      name=\"tags\"\n                      render={({ input, meta }) => (\n                        <FormControl className={classes.field}>\n                          <InputLabel htmlFor=\"select-multiple-checkbox\">\n                            Add some tags\n                          </InputLabel>\n                          <Select\n                            multiple\n                            value={this.state.selectedTags}\n                            onChange={this.handleSelectTags}\n                            input={<Input id=\"select-multiple-checkbox\" />}\n                            renderValue={selected =>\n                              this.generateTagsText(tags, selected)\n                            }\n                            className={classes.tags}\n                          >\n                            {tags.map(tag => (\n                              <MenuItem key={tag.id} value={tag.id}>\n                                <Checkbox\n                                  checked={\n                                    this.state.selectedTags.indexOf(tag.id) > -1\n                                  }\n                                />\n                                <ListItemText\n                                  primary={tag.title}\n                                  className={classes.capitalize}\n                                />\n                              </MenuItem>\n                            ))}\n                          </Select>\n                          {meta.touched &&\n                            meta.invalid && (\n                              <div className={classes.error}>{meta.error}</div>\n                            )}\n                        </FormControl>\n                      )}\n                    />\n\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.shareButton}\n                      disabled={submitting || pristine || invalid}\n                      type=\"submit\"\n                    >\n                      Share\n                    </Button>\n                  </form>\n                )}\n              />\n            );\n          }}\n        </Mutation>\n      </Fragment>\n    );\n  }\n}\n\nShareItemForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateItem(item) {\n    dispatch(updateItem(item));\n  },\n\n  resetItem() {\n    dispatch(resetItem());\n  },\n  resetItemImg() {\n    dispatch(resetItemImg());\n  }\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles)(ShareItemForm));\n","export const validate = (values, selectedTags, fileSelected) => {\n  const error = {};\n\n  if (!fileSelected) {\n    error.imageurl = 'Image is required.';\n  }\n  if (!values.title) {\n    error.title = 'Title is required.';\n  }\n  if (!values.description) {\n    error.description = 'Description is required.';\n  }\n  if (!selectedTags || selectedTags.length < 0) {\n    error.tags = 'At least one tag is required.';\n  }\n\n  return error;\n};\n","import ShareItemForm from './ShareItemForm';\n\nexport default ShareItemForm;\n","import ShareItemPreview from './ShareItemPreview';\n\nexport default ShareItemPreview;\n","import React from 'react';\nimport ItemCard from './../ItemCard/ItemCard';\nimport { connect } from 'react-redux';\n\nconst ShareItemPreview = ({ shareItemPreview }) => {\n  return <ItemCard item={shareItemPreview} />;\n};\n\nconst mapStateToProps = state => {\n  return { ...state };\n};\n\nexport default connect(mapStateToProps)(ShareItemPreview);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\n// import PropTypes from 'prop-types';\n\n/* \n  TODO: Create ShareItemForm and ShareItemPreview in the components dir\n  and call them from this file.\n\n  ShareItemForm is the form that our User will use to add a new item \n  and upload an image.\n\n  When the user is filling ShareItemForm, we will show a preview of \n  this item using the ShareItemPreview. \n  Hint: It should look like any other Item card.\n\n*/\nimport ShareItemForm from '../../components/ShareItemForm';\nimport ShareItemPreview from '../../components/ShareItemPreview';\n\nconst Share = ({ classes, tags }) => {\n  return (\n    <Grid container className={classes.container} spacing={40} justify=\"center\">\n      <Grid item sm={6} md={4} className={classes.control}>\n        <Hidden only=\"xs\">\n          <ShareItemPreview />\n        </Hidden>\n      </Grid>\n      <Grid item xs={12} sm={6} md={4} className={classes.control}>\n        <ShareItemForm tags={tags} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Share;\n","const styles = theme => ({\n  container: {\n    flexGrow: 1,\n    marginTop: theme.spacing.unit / 5,\n    padding: theme.spacing.unit * 3,\n    paddingTop: theme.spacing.unit * 12,\n    background: 'white',\n    height: '100vh'\n  }\n});\n\nexport default styles;\n","import ShareContainer from './ShareContainer';\n\nexport default ShareContainer;\n","import React from 'react';\nimport Share from './Share';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport FullScreenLoader from '../../components/FullScreenLoader';\nimport { Query } from 'react-apollo';\nimport { ALL_TAGS_QUERY } from '../../apollo/queries';\n\nconst ShareContainer = ({ classes }) => {\n  return (\n    <Query query={ALL_TAGS_QUERY}>\n      {({ loading, error, data }) => {\n        if (loading) return <FullScreenLoader inverted />;\n        if (error) return <p>{`Error! ${error.message}`}</p>;\n\n        return <Share classes={classes} tags={data.tags} />;\n      }}\n    </Query>\n  );\n};\n\nexport default withStyles(styles)(ShareContainer);\n","const styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit\n  },\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n\n  shareButton: {\n    margin: theme.spacing.unit,\n    borderRadius: 50,\n    boxShadow: 'none'\n  }\n});\n\nexport default styles;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport UserAcct from '@material-ui/icons/MoreVert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport logo from '../../images/pets.svg';\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport SignoutIcon from '@material-ui/icons/PowerSettingsNew';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/AddCircle';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { LOGOUT_MUTATION, VIEWER_QUERY } from '../../apollo/queries';\nimport { graphql, compose } from 'react-apollo';\nimport Slide from '@material-ui/core/Slide';\n\nimport styles from './styles';\n\nclass MenuAppBar extends Component {\n  state = {\n    auth: true,\n    anchorEl: null,\n    shareBtn: true\n  };\n\n  handleChange = event => {\n    this.setState({ auth: event.target.checked });\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  shareHandleChange = () => {\n    this.setState(state => ({ shareBtn: !state.shareBtn }));\n  };\n\n  render() {\n    const { classes, history } = this.props;\n    const { shareBtn } = this.state;\n    const { auth, anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n              href=\"/welcome\"\n            >\n              <img src={logo} alt=\"logo\" width=\"40\" />\n            </IconButton>\n            <div className={classes.grow} />\n            {history.location.pathname === '/share' ? (\n              <Fragment />\n            ) : (\n              <Slide direction=\"left\" in={shareBtn} mountOnEnter unmountOnExit>\n                <Button href=\"/share\" className={classes.shareButton}>\n                  <AddIcon className={classes.margin} />\n                  SHARE SOMETHING\n                </Button>\n              </Slide>\n            )}\n\n            {auth && (\n              <div>\n                <IconButton\n                  className={classes.userButton}\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <UserAcct />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem\n                    className={classes.menuItem}\n                    onClick={this.handleClose}\n                    component={Link}\n                    to=\"/profile\"\n                  >\n                    <ListItemIcon className={classes.icon}>\n                      <FingerprintIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.primary }}\n                      inset\n                      primary=\"Your Profile\"\n                    />\n                  </MenuItem>\n                  <MenuItem\n                    className={classes.menuItem}\n                    onClick={this.props.logoutMutation}\n                    component={Link}\n                    to=\"/welcome\"\n                  >\n                    <ListItemIcon className={classes.icon}>\n                      <SignoutIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.primary }}\n                      inset\n                      primary=\"Sign Out\"\n                    />\n                  </MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst refetchQueries = [\n  {\n    query: VIEWER_QUERY\n  }\n];\n\nexport default withRouter(\n  compose(\n    graphql(LOGOUT_MUTATION, {\n      options: {\n        refetchQueries\n      },\n      name: 'logoutMutation'\n    }),\n    withStyles(styles)\n  )(MenuAppBar)\n);\n","import React, { Fragment } from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport Home from '../pages/Home';\nimport Items from '../pages/Items';\nimport Profile from '../pages/Profile';\nimport Share from '../pages/Share';\nimport Menu from '../components/Menu/Menu';\nimport { ViewerContext } from '../context/ViewerProvider';\nimport FullScreenLoader from '../components/FullScreenLoader';\n\nexport default () => (\n  <Fragment>\n    <ViewerContext.Consumer>\n      {({ viewer, loading }) => {\n        if (loading) return <FullScreenLoader inverted />;\n        if (viewer) {\n          return (\n            <Fragment>\n              <Menu />\n              <Switch>\n                <Route exact path=\"/items\" component={Items} />\n                <Route exact path=\"/profile\" component={Profile} />\n                <Route exact path=\"/profile/:userid\" component={Profile} />\n                <Route exact path=\"/share\" component={Share} />\n                <Redirect from=\"*\" to=\"/items\" />\n              </Switch>\n            </Fragment>\n          );\n        } else {\n          return (\n            <Switch>\n              <Route exact path=\"/welcome\" component={Home} />\n              <Redirect from=\"*\" to=\"/welcome\" />\n            </Switch>\n          );\n        }\n      }}\n    </ViewerContext.Consumer>\n  </Fragment>\n);\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport shareItemReducer from './modules/ShareItem';\n\nconst middleware = [];\n\nconst store = createStore(\n  combineReducers({\n    shareItemPreview: shareItemReducer\n  }),\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport theme from './theme';\nimport client from './apollo';\nimport Layout from './routes/Layout';\nimport store from './redux';\nimport { ViewerProvider } from './context/ViewerProvider';\n\nimport './index.css';\n\nconst App = () => {\n  return (\n    <ReduxProvider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <ApolloProvider client={client}>\n          <ViewerProvider>\n            <BrowserRouter>\n              <Layout />\n            </BrowserRouter>\n          </ViewerProvider>\n        </ApolloProvider>\n      </MuiThemeProvider>\n    </ReduxProvider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}